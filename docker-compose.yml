version: '3.7'

services:
  backend:
    build: ./backend
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`s148317devopsap.live`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"

  frontend:
    build: ./frontend
    ports:
      - "80:80"
    networks:
      - app-network
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`s148317devopsap.live`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html

  mysql:
    image: mysql:5.7
    env_file:
      - .env
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

  traefik:
    image: traefik:v2.5
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${CERT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "82:80"
      - "443:443"
      - "8082:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  letsencrypt: